}
for(col in seq(colnames(numericos))) {
g=  ggplot(dados,aes(y=dados[[col]],fill=dados$class)) +
geom_histogram() +
labs(x=colnames(numericos[col]),y='frequency')
g |> print()
}
for(col in seq(colnames(numericos))) {
g=  ggplot(dados,aes(x=dados[[col]],fill=dados$class)) +
geom_histogram() +
labs(x=colnames(numericos[col]),y='frequency')
g |> print()
}
for(col in seq(colnames(numericos))) {
g=  ggplot(dados,aes(x=dados[[col]],fill=dados$class)) +
geom_histogram(position = position_stack(reverse = TRUE)) +
labs(x=colnames(numericos[col]),y='frequency')
g |> print()
}
for(col in seq(colnames(numericos))) {
dados[col]
}
for(col in seq(colnames(numericos))) {
dados[col] |> print()
}
dados=read_csv(here('data/credit_customers.csv'))
dados |> head()
dados |> summary()
numericos=dados |> select_if(is.numeric)
categoricos=dados |> select_if(is.character)
for(col in colnames(categoricos)) {
dados[[col]] =as.factor(dados[[col]])
}
for(col in seq(colnames(numericos))) {
dados[col] |> print()
}
for(col in seq(colnames(numericos))) {
col |> print()
}
for(col in colnames(numericos)) {
col |> print()
}
for(col in colnames(numericos)) {
g=  ggplot(dados,aes(x=dados[[col]],fill=dados$class)) +
geom_histogram(position = position_stack(reverse = TRUE)) +
labs(x=colnames(numericos[col]),y='frequency')
g |> print()
}
for(col in colnames(numericos)) {
g=  ggplot(dados,aes(x=dados[[col]],fill=dados$class)) +
geom_histogram(position = position_dodge(reverse = TRUE)) +
labs(x=colnames(numericos[col]),y='frequency')
g |> print()
}
for(col in colnames(numericos)) {
g=  ggplot(dados,aes(x=dados[[col]],fill=dados$class)) +
geom_histogram() +
ggplot2::facet_grid() +
labs(x=colnames(numericos[col]),y='frequency')
g |> print()
}
colunas_numericas = colnames(numericos)
g=  ggplot(dados,aes(x=dados[[colunas_numericas]],fill=dados$class)) +
geom_histogram() +
facet_grid(class ~.)
labs(x=colnames(numericos[col]),y='frequency')
g |> print()
colunas_numericas = colnames(numericos)
g=  ggplot(dados,aes(fill=dados$class)) +
geom_histogram() +
facet_grid(class ~.)
labs(x=colnames(numericos[col]),y='frequency')
g |> print()
colunas_numericas = colnames(numericos)
g=  ggplot(dados,aes(fill=dados$class)) +
geom_histogram() +
facet_grid(class ~ dados[[colunas_numericas]]) +
labs(x=colnames(numericos[col]),y='frequency')
g |> print()
colunas_numericas = colnames(numericos)
g=  ggplot(dados,aes(fill=dados$class)) +
geom_histogram() +
facet_grid(dados[[colunas_numericas]] ~ class ) +
labs(x=colnames(numericos[col]),y='frequency')
g |> print()
colunas_numericas = colnames(numericos)
g=  ggplot(dados,aes(fill=dados$class)) +
geom_histogram() +
facet_wrap(dados[[colunas_numericas]] ~ class ) +
labs(x=colnames(numericos[col]),y='frequency')
g |> print()
colunas_numericas = colnames(numericos)
g=  ggplot(dados,aes(fill=dados$class)) +
geom_histogram() +
facet_wrap(class ~ dados[[colunas_numericas]])  +
labs(x=colnames(numericos[col]),y='frequency')
g |> print()
colunas_numericas = colnames(numericos)
g=  ggplot(dados,aes(fill=dados$class)) +
geom_histogram() +
facet_wrap(class ~ dados[colunas_numericas])  +
labs(x=colnames(numericos[col]),y='frequency')
g |> print()
colunas_numericas = colnames(numericos)
ggplot(dados,aes(fill=dados$class)) +
geom_histogram() +
facet_wrap(class ~ dados[colunas_numericas])  +
labs(x=colnames(numericos[col]),y='frequency')
colunas_numericas = colnames(numericos)
ggplot(dados,aes(fill=dados$class)) +
geom_histogram() +
facet_wrap(class ~ dados[colunas_numericas])
colunas_numericas = colnames(numericos)
ggplot(dados,aes(fill=dados$class)) +
geom_histogram() +
facet_wrap(class~(dados[colunas_numericas]))
colunas_numericas = colnames(numericos)
ggplot(dados) +
geom_histogram() +
facet_wrap(class~(dados[colunas_numericas]))
colunas_numericas = colnames(numericos)
dados[colunas_numericas]
colunas_numericas = colnames(numericos)
ggplot(dados, aes(x=dados[colunas_numericas])) +
geom_histogram() +
facet_wrap(class~colunas_numericas)
colunas_numericas = colnames(numericos)
ggplot(dados, ) +
geom_histogram(aes(x=dados[colunas_numericas])) +
facet_wrap(class~colunas_numericas)
colunas_numericas = colnames(numericos)
ggplot(dados, ) +
geom_histogram(aes(x=dados[colunas_numericas],fill=dados$class)) +
facet_wrap(class~colunas_numericas)
colunas_numericas = colnames(numericos)
ggplot(dados) +
geom_histogram(aes(x=dados[colunas_numericas],fill=dados$class)) +
facet_wrap(class~colunas_numericas)
colunas_numericas = colnames(numericos)
ggplot(dados) +
geom_col() +
facet_wrap(class~ .)
colunas_numericas = colnames(numericos)
ggplot(dados) +
geom_col(aes(x=class)) +
facet_wrap(class~ .)
colunas_numericas = colnames(numericos)
ggplot(dados) +
geom_col(aes(x=class)) +
facet_grid(class~ .)
colunas_numericas = colnames(numericos)
ggplot(dados) +
geom_col(aes(x=class,y=dados$employment)) +
facet_grid(class~ .)
colunas_numericas = colnames(numericos)
ggplot(dados) +
geom_col(aes(x=class,y=dados$employment)) +
facet_grid(dados$employment~ .)
colunas_numericas = colnames(numericos)
ggplot(dados) +
geom_col(aes(x=class,y=dados$employment)) +
facet_wrap(dados$employment~ .)
for(col in colnames(numericos)) {
g=  ggplot(dados,aes(x=dados[[col]],fill=dados$class)) +
geom_histogram()) +
for(col in colnames(numericos)) {
g=  ggplot(dados,aes(x=dados[[col]],fill=dados$class)) +
geom_histogram() +
labs(x=colnames(numericos[col]),y='frequency')
g |> print()
}
for(col in colnames(numericos)) {
g=  ggplot(dados,aes(x=dados[[col]],fill=dados$class)) +
geom_histogram() +
labs(x=colnames(numericos[col]),y='frequency')
g |> print()
}
for(col in colnames(numericos)) {
g=  ggplot(dados,aes(x=dados[[col]],fill=dados$class)) +
geom_histogram() +
labs(x=colnames(numericos[col]),y='frequency', fill='class')
g |> print()
}
for(col in colnames(numericos)) {
g=  ggplot(dados,aes(x=dados[[col]],fill=dados$class)) +
geom_histogram() +
labs(x=colnames(numericos[col]),y='frequency', fill='class') +
facet_wrap(class ~.)
g |> print()
}
for(col in colnames(numericos)) {
g=  ggplot(dados,aes(x=dados[[col]],fill=dados$class)) +
geom_histogram() +
labs(x=colnames(numericos[col]),y='frequency') +
facet_wrap(class ~.) +
theme(
legend.position = 'none'
)
g |> print()
}
for(col in colnames(numericos)) {
g=  ggplot(dados,aes(x=dados[[col]],fill=dados$class)) +
geom_histogram() +
labs(x=colnames(numericos[col]),y='frequency') +
facet_wrap(class ~.,dir = 'v') +
theme(
legend.position = 'none'
)
g |> print()
}
knitr::opts_chunk$set(  warning=FALSE, message=FALSE, tidy=TRUE,	tidy.opts=list(arrow=TRUE,	indent=2),fig.width = 6, fig.align = 'center', fig.asp=0.618, out.width = '100%')
library(tidyverse)
library(here)
library(glue)
for(col in seq(colnames(numericos))) {
g=  ggplot(numericos,aes(x=numericos[[col]])) +
geom_histogram( fill='blue') +
labs(title=glue('Distribuição da {colname(numericos[col])} '),x=colnames(numericos[col]),y='frequency')
g |> print()
}
for(col in seq(colnames(numericos))) {
g=  ggplot(numericos,aes(x=numericos[[col]])) +
geom_histogram( fill='blue') +
labs(title=glue('Distribuição da {colnames(numericos[col])} '),x=colnames(numericos[col]),y='frequency')
g |> print()
}
for(col in seq(colnames(numericos))) {
g=  ggplot(numericos,aes(x=numericos[[col]])) +
geom_histogram( fill='blue') +
labs(title=glue('Distribuição da variavel **{colnames(numericos[col])}** '),x=colnames(numericos[col]),y='frequency')
g |> print()
}
for(col in seq(colnames(numericos))) {
g=  ggplot(numericos,aes(x=numericos[[col]])) +
geom_histogram( fill='blue') +
labs(title=glue('Distribuição da variavel {colnames(numericos[col])} '),x=colnames(numericos[col]),y='frequency')+
theme(plot.title.position = 'center')
g |> print()
}
for(col in seq(colnames(numericos))) {
g=  ggplot(numericos,aes(x=numericos[[col]])) +
geom_histogram( fill='blue') +
labs(title=glue('Distribuição da variavel {colnames(numericos[col])} '),x=colnames(numericos[col]),y='frequency')+
theme(
plot.title = element_text(hjust = 0.5))
g |> print()
}
ggplot(dados, aes(age,credit_aumont)) +
geom_point(aes(color=class))
ggplot(dados) +
geom_point(aes(age,credit_aumont,color=class))
View(dados)
ggplot(dados) +
geom_point(aes(age,credit_amount,color=class))
ggplot(dados) +
geom_point(aes(age,credit_amount))
for(col in seq(colnames(categoricos))) {
g=ggplot(categoricos) +
geom_bar(aes(x=categoricos[[col]],
fill=categoricos[[col]])) +
labs(x=colnames(categoricos[col]),
y='frequency',
fill=colnames(categoricos[col]),
title=glue('Distribuição da variavel {colnames(categoricos[col])} ')) +
theme(
legend.position = 'none',
plot.title = element_text(hjust = 0.5)
)
g |> print()
}
for(col in seq(colnames(categoricos))) {
g=ggplot(categoricos) +
geom_bar(aes(x=categoricos[[col]],
fill=categoricos$class),
position ='dodge2') +
labs(x=colnames(categoricos[col]),
y='frequency',
fill=categoricos$class,
title=glue('Distribuição da variavel {colnames(categoricos[col])} ')) +
theme(
legend.position = 'none',
plot.title = element_text(hjust = 0.5)
)
print(g)
}
for(col in seq(colnames(categoricos))) {
g=ggplot(categoricos) +
geom_bar(aes(x=categoricos[[col]],
fill=categoricos[[col]])) +
labs(x=colnames(categoricos[col]),
y='frequency',
fill=colnames(categoricos[col]),
title=glue('Distribuição da variavel {colnames(categoricos[col])} ')) +
theme(
legend.position = 'none',
plot.title = element_text(hjust = 0.5),
axis.ticks.x = element_text(angle = 45)
)
g |> print()
}
for(col in seq(colnames(categoricos))) {
g=ggplot(categoricos) +
geom_bar(aes(x=categoricos[[col]],
fill=categoricos[[col]])) +
labs(x=colnames(categoricos[col]),
y='frequency',
fill=colnames(categoricos[col]),
title=glue('Distribuição da variavel {colnames(categoricos[col])} ')) +
theme(
legend.position = 'none',
plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 45)
)
g |> print()
}
for(col in seq(colnames(categoricos))) {
g=ggplot(categoricos) +
geom_bar(aes(x=categoricos[[col]],
fill=categoricos[[col]])) +
labs(x=colnames(categoricos[col]),
y='frequency',
fill=colnames(categoricos[col]),
title=glue('Distribuição da variavel {colnames(categoricos[col])} ')) +
theme(
legend.position = 'none',
plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 45,hjust = 0.5)
)
g |> print()
}
for(col in seq(colnames(categoricos))) {
g=ggplot(categoricos) +
geom_bar(aes(x=categoricos[[col]],
fill=categoricos[[col]])) +
labs(x=colnames(categoricos[col]),
y='frequency',
fill=colnames(categoricos[col]),
title=glue('Distribuição da variavel {colnames(categoricos[col])} ')) +
theme(
legend.position = 'none',
plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 45,hjust = 1)
)
g |> print()
}
for(col in seq(colnames(categoricos))) {
g=ggplot(categoricos) +
geom_bar(aes(x=categoricos[[col]],
fill=categoricos$class),
position ='dodge2') +
labs(x=colnames(categoricos[col]),
y='frequency',
fill=categoricos$class,
title=glue('Distribuição da variavel {colnames(categoricos[col])} ')) +
theme(
plot.title = element_text(hjust = 0.5)
)
print(g)
}
for(col in seq(colnames(categoricos))) {
g=ggplot(categoricos) +
geom_bar(aes(x=categoricos[[col]],
fill=categoricos$class),
position ='dodge2') +
labs(x=colnames(categoricos[col]),
y='frequency',
title=glue('Distribuição da variavel {colnames(categoricos[col])} ')) +
theme(
plot.title = element_text(hjust = 0.5)
)
print(g)
}
for(col in seq(colnames(categoricos))) {
g=ggplot(categoricos) +
geom_bar(aes(x=categoricos[[col]],
fill=categoricos$class),
position ='dodge2') +
labs(x=colnames(categoricos[col]),
y='frequency',
fill='class',
title=glue('Distribuição da variavel {colnames(categoricos[col])} ')) +
theme(
plot.title = element_text(hjust = 0.5)
)
print(g)
}
for(col in colnames(numericos)) {
g=  ggplot(dados,
aes(x=dados[[col]],
fill=dados$class)) +
geom_histogram() +
labs(
title=glue('{col} x class'),
x=colnames(numericos[col]),
y='frequency') +
facet_wrap(class ~.,dir = 'v') +
theme(
legend.position = 'none',
plot.title = element_text(hjust = 0.5)
)
g |> print()
}
source("D:/Romario/Programar/Ferramentas/R/Projetos/Datasets/kaggle_credit_risk_customers/scripts/modelo_final.R", echo=TRUE)
modelo_regressao_logistica <-
logistic_reg(mixture = tube()) |>
set_engine('glm')
show_best(modelo_regressao_logistica_tuning)
set.seed(108)
modelo_regressao_logistica_tuning<- tune_bayes(modelo_regressao_logistica,dados_preprocesamento,dados_folds, iter = 5)
modelo_regressao_logistica <-
logistic_reg(mixture = tune()) |>
set_engine('glm')
set.seed(108)
modelo_regressao_logistica_tuning<- tune_bayes(modelo_regressao_logistica,dados_preprocesamento,dados_folds, iter = 5)
modelo_final <- fit(rf_wflow, dados)
# Save the best modelos -----------------------------------------------
algoritmo_final = rand_forest( min_n = 12,trees = 1010) |>
set_engine('randomForest') |>
set_mode('classification')
worflow_final=workflow() %>%
add_model(modelo_final) %>%
add_recipe(dados_preprocesamento)
algoritmo_final = rand_forest( min_n = 12,trees = 1010) |>
set_engine('randomForest') |>
set_mode('classification')
workflow_final=workflow() %>%
add_model(modelo_final) %>%
add_recipe(dados_preprocesamento)
algoritmo_final = rand_forest( min_n = 12,trees = 1010) |>
set_engine('randomForest') |>
set_mode('classification')
workflow_final=workflow() %>%
add_model(algoritmo_final) %>%
add_recipe(dados_preprocesamento)
modelo_final <- fit(workflow_final, dados)
saveRDS(modelo_final,here('modelo/modelo_final'))
saveRDS(modelo_final,here('modelo/modelo_final'))
library(tidyverse)
library(here)
dados=read_csv(here('data/credit_customers.csv'))
dados |> glimpse()
data=readRDS(file=here('data/credit_customers.csv'))
library(here)
library(tidyverse)
library(tidymodels)
library(shinydashboard)
library(shiny)
library(shinythemes)
library(knitr)
data=readRDS(file=here('data/credit_customers.csv'))
data=read_csv(file=here('data/credit_customers.csv'))
model=readRDS(file=here('modelo/modelo_final'))
data_shiny = subset(head(data,0), select = -c(class))
data |> colnames()
runApp('credit_risk_app')
shiny::runApp('credit_risk_app')
runApp('credit_risk_app')
runApp('credit_risk_app')
runApp('credit_risk_app')
runApp('credit_risk_app')
library(tidyverse)
library(here)
dados=read_csv(here('data/credit_customers.csv'))
dados |> head()
data=read_csv(file=here('data/credit_customers.csv'))
model=readRDS(file=here('modelo/modelo_final'))
categoricos=data |> select_if(is.character) |> colnames()
for(col in categoricos) {
data[[col]] =as.factor(data[[col]])
}
data_shiny = subset(head(data,0), select = -c(class))
runApp('credit_risk_app')
runApp('credit_risk_app')
predict(model,data[1],type = 'prob')
predict(model,data[1,],type = 'prob')
predict(model,data[1,],type = 'prob') |> round(2) |> table()
predict(model,data[1,],type = 'prob') |> round(2)
pred= predict(model,data[1,],type = 'prob')
library(glue)
print(glue('{pred$.pred_bad * 100}'))
runApp('credit_risk_app')
library(here)
library(tidyverse)
library(tidymodels)
library(shinydashboard)
library(shiny)
library(shinythemes)
library(knitr)
library(glue)
data=read_csv(file=here('data/credit_customers.csv'))
model=readRDS(file=here('modelo/modelo_final'))
categoricos=data |> select_if(is.character) |> colnames()
for(col in categoricos) {
data[[col]] =as.factor(data[[col]])
}
data_shiny = subset(head(data,0), select = -c(class))
pred= predict(model,data[1,],type = 'prob')
pred$.pred_bad
pred= predict(model,data[1,],type = 'prob')  |> table()
pred
pred= predict(model,data[1,],type = 'prob')
pred$
print(glue('{pred$.pred_bad * 100}'))
runApp('credit_risk_app')
colnames(data)
runApp('credit_risk_app')
runApp('credit_risk_app')
unique(data$property_magnitude)
type(data$property_magnitude)
class(data$property_magnitude)
data_shiny |> colnames()
runApp('credit_risk_app')
